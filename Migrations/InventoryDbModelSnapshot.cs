// <auto-generated />
using System;
using InventorySystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventorySystem.Migrations
{
    [DbContext(typeof(InventoryDb))]
    partial class InventoryDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventorySystem.ViewModels.AppUsers", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AppUserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly?>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("ModelVersion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.HasKey("AssetId")
                        .HasName("PK__Assets__434923527B32AE7A");

                    b.HasIndex("TypeId");

                    b.HasIndex(new[] { "SerialNumber" }, "UQ__Assets__048A00086856E8DF")
                        .IsUnique();

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentId")
                        .HasName("PK__Assignme__32499E779B91476A");

                    b.HasIndex("AssetId");

                    b.HasIndex("UserId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BEDE4A8FBF5");

                    b.HasIndex(new[] { "Name" }, "UQ__Departme__737584F6B358F3ED")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Desktop", b =>
                {
                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Cpu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CPU");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gpu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GPU");

                    b.Property<string>("HardDisk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacEthernet")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MacWifi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RAM");

                    b.HasKey("AssetId")
                        .HasName("PK__Desktops__43492352A57D4EA2");

                    b.ToTable("Desktops", t =>
                        {
                            t.HasTrigger("PreventDuplicateAsset_Desktops");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Laptop", b =>
                {
                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Cpu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CPU");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gpu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GPU");

                    b.Property<string>("HardDisk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacEthernet")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MacWifi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RAM");

                    b.Property<string>("ScreenSize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AssetId")
                        .HasName("PK__Laptops__43492352E8BB9645");

                    b.ToTable("Laptops", t =>
                        {
                            t.HasTrigger("PreventDuplicateAsset_Laptops");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("InventorySystem.ViewModels.LogsHistory", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("ChangeDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId")
                        .HasName("PK__LogsHist__5E54864892641767");

                    b.HasIndex("AppUserId");

                    b.HasIndex("AssetId");

                    b.HasIndex("UserId");

                    b.ToTable("LogsHistory", (string)null);
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Maintenance", b =>
                {
                    b.Property<int>("MaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceId"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateReceived")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateReturned")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Solution")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MaintenanceId");

                    b.HasIndex("AssetId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("SiteId")
                        .HasName("PK__Sites__B9DCB963051D94EB");

                    b.HasIndex(new[] { "Name" }, "UQ__Sites__737584F650DF6B5D")
                        .IsUnique();

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TypeId")
                        .HasName("PK__Types__516F03B5868C8A62");

                    b.HasIndex(new[] { "Name" }, "UQ__Types__737584F6BA0704D3")
                        .IsUnique();

                    b.ToTable("Types");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fingerprint")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("User");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C6FE17A3E");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("SiteId");

                    b.HasIndex(new[] { "Fingerprint" }, "UQ__Users__5000B8ECDC093F90")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__Users__5C7E359E8AFBFB2D")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053494A7C99C")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Asset", b =>
                {
                    b.HasOne("InventorySystem.ViewModels.Type", "Type")
                        .WithMany("Assets")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Assets__TypeId__4E88ABD4");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Assignment", b =>
                {
                    b.HasOne("InventorySystem.ViewModels.Asset", "Asset")
                        .WithMany("Assignments")
                        .HasForeignKey("AssetId")
                        .IsRequired()
                        .HasConstraintName("FK__Assignmen__Asset__5812160E");

                    b.HasOne("InventorySystem.ViewModels.User", "User")
                        .WithMany("Assignments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Assignmen__UserI__59063A47");

                    b.Navigation("Asset");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Desktop", b =>
                {
                    b.HasOne("InventorySystem.ViewModels.Asset", "Asset")
                        .WithOne("Desktop")
                        .HasForeignKey("InventorySystem.ViewModels.Desktop", "AssetId")
                        .IsRequired()
                        .HasConstraintName("FK__Desktops__AssetI__5535A963");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Laptop", b =>
                {
                    b.HasOne("InventorySystem.ViewModels.Asset", "Asset")
                        .WithOne("Laptop")
                        .HasForeignKey("InventorySystem.ViewModels.Laptop", "AssetId")
                        .IsRequired()
                        .HasConstraintName("FK__Laptops__AssetId__52593CB8");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.LogsHistory", b =>
                {
                    b.HasOne("InventorySystem.ViewModels.AppUsers", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventorySystem.ViewModels.Asset", "Asset")
                        .WithMany("LogsHistories")
                        .HasForeignKey("AssetId")
                        .IsRequired()
                        .HasConstraintName("FK__LogsHisto__Asset__5CD6CB2B");

                    b.HasOne("InventorySystem.ViewModels.User", null)
                        .WithMany("LogsHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Maintenance", b =>
                {
                    b.HasOne("InventorySystem.ViewModels.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.User", b =>
                {
                    b.HasOne("InventorySystem.ViewModels.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__Departmen__4316F928");

                    b.HasOne("InventorySystem.ViewModels.User", "Manager")
                        .WithMany("InverseManager")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK__Users__ManagerId__44FF419A");

                    b.HasOne("InventorySystem.ViewModels.Site", "Site")
                        .WithMany("Users")
                        .HasForeignKey("SiteId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__SiteId__440B1D61");

                    b.Navigation("Department");

                    b.Navigation("Manager");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Asset", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Desktop");

                    b.Navigation("Laptop");

                    b.Navigation("LogsHistories");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Site", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.Type", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("InventorySystem.ViewModels.User", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("InverseManager");

                    b.Navigation("LogsHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
